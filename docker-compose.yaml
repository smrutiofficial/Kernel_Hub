# version: "3.8"
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "8001:27017"
    volumes:
      - /home/smruti/Development/updatep/Kernel_Hub/mongo-data/:/data/db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  build-checks:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    command: sh -c "npx tsc --noEmit && npm run build"
    networks:
      - app-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: client
    ports:
      - "3000:3000"
    volumes:
    - ./client:/app
    - node_modules:/app/node_modules
    - /app/.next
    environment:
      - NODE_ENV=developement
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    restart: unless-stopped
    command: npm run dev # Use your development command if you want hot-reloading

  # server:
  #   build:
  #     context: .
  #     dockerfile: server/Dockerfile
  #   container_name: server
  #   env_file:
  #     - ./server/.env
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - mongodb
  #   volumes:
  #     - ./server:/server
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   command: npm run dev # Use your development command if you want hot-reloading
  #
  # admin:
  #   build:
  #     context: ./admin
  #     dockerfile: ./Dockerfile
  #   container_name: admin
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - ./admin:/admin/app
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   command: npm run dev # Use your development command if you want hot-reloading
  #
networks:
  app-network:
    driver: bridge
volumes:
  node_modules:
